ARG BASE_IMAGE=ruby:<%= ruby_version %>

# Intermediate image that has needed packages
FROM $BASE_IMAGE AS base
ARG ESSENTIAL_PACKAGES="build-essential cmake libjemalloc2 ssmtp"
ARG DEV_TOOLS_PACKAGES="vim nano screen tmux telnet iproute2 net-tools less"
<% if includes_frontend %>
ARG FRONTEND_PACKAGES="nodejs npm"
<% end %>
<% if database_packages %>
ARG DATABASE_PACKAGES="<%= database_packages %>"
<% end %>
<% if add_chromium %>
ARG CHROMEDEPS="libasound2 libatk1.0-0 libatk-bridge2.0-0 libatspi2.0-0 libcups2 libdbus-1-3 libgtk-3-0 libnspr4 libnss3 libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 libxfixes3 libxi6 libxrandr2 libxss1 libxtst6"
<% end %>
ARG PACKAGES="${ESSENTIAL_PACKAGES} ${DEV_TOOLS_PACKAGES}<% if includes_frontend %> ${FRONTEND_PACKAGES}<% end %><% if database_packages %> ${DATABASE_PACKAGES}<% end %><% if add_chromium %> ${CHROMEDEPS}<% end %>"

COPY .bundle/config.production .bundle/config

RUN --mount=type=cache,uid=1000,target=/var/cache/apt \
    apt-get update -qq && \
    apt-get install --no-install-recommends -y ${PACKAGES} && \
    apt-get autoclean && \
    apt-get autoremove && \
    corepack enable && \
    yarn set version <%= yarn_version %> && \
    rm -rf /var/lib/apt/lists/*

# Intermediate image that has bundler installed
FROM base AS bundler-base
RUN gem install bundler:<%= bundler_version %> && \
    gem regenerate_binstubs

# Install gems and clean up
FROM bundler-base AS gems
WORKDIR /rails
COPY Gemfile Gemfile.lock ./

RUN --mount=type=secret,id=ssh_prv_key_file,target=/root/.ssh/id_rsa \
    mkdir -p /root/.ssh && \
    chmod 0700 /root/.ssh && \
    ssh-keyscan github.com >> /root/.ssh/known_hosts && \
    bundle install

# Application
FROM base

### sendmail
ARG SSMTP_RELAY_HOST_PORT
RUN sed -i "s/mailhub=mail/mailhub=${SSMTP_RELAY_HOST_PORT}/" /etc/ssmtp/ssmtp.conf
####

# russian CAs
RUN wget --quiet https://gu-st.ru/content/lending/russian_trusted_root_ca_pem.crt -O /usr/local/share/ca-certificates/russian_trusted_root_ca_pem.crt && \
    /usr/sbin/update-ca-certificates

# Switching to dedicated user
RUN groupadd -g 1000 app && \
    useradd -u 1000 -g 1000 -m app --shell /bin/bash

RUN mkdir /rails && chown app:app /rails && chmod 0755 /rails
WORKDIR /rails
USER app
COPY --chown=app:app . /rails
COPY --chown=app:app .bashrc /home/app/.bashrc

ARG RAILS_ENV
COPY --chown=app:app --from=gems /usr/local/bundle/ /usr/local/bundle/
COPY --chown=app:app --from=gems /rails/vendor/bundle /rails/vendor/bundle
RUN npm install

RUN bin/rails sidekiq:merge_configs
RUN echo "Pre-compiling assets with RAILS_ENV=$RAILS_ENV" && \
    bin/rails assets:precompile --silent

### build version args
ARG VERSION_BUILD_DATE
ARG VERSION_BUILD_JOB_NUMBER
ARG VERSION_BRANCH
ARG VERSION_TAG
ARG VERSION_SHA

ENV VERSION_BUILD_DATE=${VERSION_BUILD_DATE} \
    VERSION_BUILD_JOB_NUMBER=${VERSION_BUILD_JOB_NUMBER} \
    VERSION_BRANCH=${VERSION_BRANCH} \
    VERSION_TAG=${VERSION_TAG} \
    VERSION_SHA=${VERSION_SHA}
